{"version":3,"sources":["src/index.js"],"names":["files","options","ps","map","name","sr","all","then","values","combine","cifar10","trainFiles","X_train","X","y_train","y","testFiles","X_test","y_test","load","bufferSplit","isStream","createStream","createPromise","appDir","dirname","require","main","filename","bufs","divider","length","quotient","range","slice","i","flatten","arr","reduce","acc","concat","start","end","result","push","stream","pipe","dir","join","getFileName","postfix","cols","rows","channel","valueSize","totalSize","mapper","chunk","Uint8Array","buf","existsSync","Error","__dirname","createReadStream","highWaterMark","config","output","resolve","reject","converter","data","resolver","ret","removeListeners","removeListener","on","e"],"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","file":"index.js","sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport assert from 'assert';\n\nconst appDir = path.dirname(require.main.filename);\n\n/* Library */\nexport function bufferSplit(bufs, divider){\n  assert(bufs.length % divider === 0);\n  const quotient = bufs.length / divider;\n  return range(divider).map(i => bufs.slice(quotient * i, quotient * (i+1)));\n}\n\nfunction flatten(arr) {\n  return arr.reduce((acc, {X, y}) => {\n    acc.X = acc.X.concat(X);\n    acc.y = acc.y.concat(y);\n    return acc;\n  }, {\n    X: [],\n    y: []\n  });\n} \n\nfunction range(start, end=start) {\n  if (start === end) start = 0;\n  const result = [];\n\n  for (let i=start; i<end; i++) \n    result.push(i);\n\n  return result;\n}\n\nexport function isStream(stream) {\n  return stream !== null &&\n    typeof stream === 'object' &&\n    typeof stream.pipe === 'function';\n}\n\n/* Configuration CIFAR-10 */\nexport const cifar10 = {\n  dir: path.join(appDir, 'cifar-10-batches-bin'),\n  getFileName : function(postfix) {\n    return `${this.dir}/data_batch_${postfix}.bin`;\n  },\n  get trainFiles() {\n    return range(1,6).map(i => this.getFileName(i));\n  },\n  get testFiles(){\n    return [`${this.dir}/test_batch.bin`];\n  }, \n  cols: 32,\n  rows: 32,\n  channel: 3,\n  valueSize: 1,\n  get totalSize() {\n    return this.valueSize + this.channel * this.cols * this.rows;\n  },\n  mapper: function (chunk) {\n    const y = chunk[0];\n    const X = bufferSplit(chunk.slice(this.valueSize), this.channel)\n              .map(buf => new Uint8Array(buf));\n    return { X, y };\n  }\n}\n\n\n/* Main  */\nexport function createStream(filename, {totalSize}){\n  if (!fs.existsSync(filename)) {\n      throw new Error(`Data files are not existed. Run '${__dirname}/get_datasets.sh'`)\n  }\n\n  const stream = fs.createReadStream(filename, {highWaterMark:totalSize});\n\n  return stream;\n}\n\nexport function createPromise(stream, config) {\n  let output = [];\n\n  return new Promise((resolve, reject) => {\n    function converter(data) {\n      output.push(config.mapper(data));\n    }\n\n    function resolver() {\n      const ret = output.reduce((acc, {X, y}) => {\n        acc.X.push(X);\n        acc.y.push(y);\n        return acc;\n      }, {\n        X: [],\n        y: []\n      });\n      resolve(ret);\n      output = null;\n      removeListeners();\n    }\n\n    function removeListeners() {\n      stream.removeListener('data', converter)\n      stream.removeListener('end', resolver)\n      stream.removeListener('close', resolver)\n    }\n\n    try {\n      stream.on('data', converter);        // stream.on('data', function(data) {\n      stream.on('end', resolver); \n      stream.on('close', resolver); \n    }\n    catch(e) /*istanbul ignore next*/ {\n      removeListeners();\n      reject(e);\n    }\n  });\n}\n\nexport async function combine(files, options) {\n  const ps = files.map(name => createStream(name, options))\n                  .map(sr => createPromise(sr, options));\n  return await Promise.all(ps).then(values => flatten(values));\n}\n\nexport async function load(options=cifar10) {\n  const { X: X_train, y: y_train } = await combine(options.trainFiles, options);\n  const { X: X_test, y: y_test } = await combine(options.testFiles, options);\n\n  return {\n    X_train,\n    y_train,\n    X_test,\n    y_test\n  }\n}\n\nexport default {\n  createStream,\n  createPromise,\n  combine,\n  load,\n}\n"]}